import {generateHashId} from './utils';

import {
  DEFAULT_MESSAGE, DEFAULT_NOTIFICATION_TOPICS,
  DEFAULT_NOTIFICATION_TYPES, DEFAULT_UUID_COUNT
} from 'constants/default-settings';

/**
 * Creates a notofication
 * @param {string} message - Message to display during the notification
 * @param {string} [type] - The type of message. One of DEFAULT_NOTIFICATION_TYPES
 * @param {string} [topic] - The topic the notification belongs to. One of DEFAULT_NOTIFICATION_TOPICS
 * @param {string} [id] optional id for notification. If not provided it will be generated by the method
 * @param {object} [options] - Extra parameters to store as part of hte notification
 * @returns {object}
 */
export function createNotification({
  message = DEFAULT_MESSAGE,
  type = DEFAULT_NOTIFICATION_TYPES.INFO,
  topic = DEFAULT_NOTIFICATION_TOPICS.GLOBAL,
  id = generateHashId(DEFAULT_UUID_COUNT),
  ...options
}) {
  return {
    ...options,
    id,
    message,
    type,
    topic
  };
}

/**
 * Creates an error notification
 * @param options
 * @returns {{topic, id, message, type: (null|number)}}
 */
export const errorNotification = options =>
  ({...createNotification(options), type: DEFAULT_NOTIFICATION_TYPES.ERROR});

/**
 * Creates a success notification
 * @param options
 * @returns {{topic, id, message, type: null}}
 */
export const successNotification = options =>
  ({...createNotification(options), type: DEFAULT_NOTIFICATION_TYPES.SUCCESS});
